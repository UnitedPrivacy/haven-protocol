--- monero/src/wallet/message_store.h	2019-06-20 21:03:18.794816074 +0100
+++ haven/src/wallet/message_store.h	2019-06-05 12:45:14.769728847 +0100
@@ -153,7 +153,7 @@
   struct file_transport_message
   {
     cryptonote::account_public_address sender_address;
-    crypto::chacha_iv iv;
+    crypto::chacha8_iv iv;
     crypto::public_key encryption_public_key;
     message internal_message;
   };
@@ -171,7 +171,7 @@
   {
     std::string magic_string;
     uint32_t file_version;
-    crypto::chacha_iv iv;
+    crypto::chacha8_iv iv;
     std::string encrypted_data;
   };
 
@@ -324,8 +324,8 @@
     size_t get_other_signers_id_count(const std::vector<uint32_t> &ids) const;
     bool message_ids_complete(const std::vector<uint32_t> &ids) const;
     void encrypt(crypto::public_key public_key, const std::string &plaintext,
-                 std::string &ciphertext, crypto::public_key &encryption_public_key, crypto::chacha_iv &iv);
-    void decrypt(const std::string &ciphertext, const crypto::public_key &encryption_public_key, const crypto::chacha_iv &iv,
+                 std::string &ciphertext, crypto::public_key &encryption_public_key, crypto::chacha8_iv &iv);
+    void decrypt(const std::string &ciphertext, const crypto::public_key &encryption_public_key, const crypto::chacha8_iv &iv,
                  const crypto::secret_key &view_secret_key, std::string &plaintext);
     std::string create_auto_config_token();
     void setup_signer_for_auto_config(uint32_t index, const std::string token, bool receiving);
@@ -412,7 +412,7 @@
     }
 
     template <class Archive>
-    inline void serialize(Archive &a, crypto::chacha_iv &x, const boost::serialization::version_type ver)
+    inline void serialize(Archive &a, crypto::chacha8_iv &x, const boost::serialization::version_type ver)
     {
       a & x.data;
     }
